// Copyright 2024 Nitro Agility S.r.l.
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.
//
// SPDX-License-Identifier: Apache-2.0


syntax="proto3";

import "google/protobuf/timestamp.proto";

package policyadministrationpoint;

option go_package = "github.com/permguard/permguard/internal/hosts/api/pap/v1";

// Repositories

// Repository get request
message RepositoryGetRequest {
    int64 AccountID = 1;
    optional string RepositoryID = 2;
	optional string Name = 3;
}

// Repository create request
message RepositoryCreateRequest {
    int64 AccountID = 1;
	string Name = 2;
}

// Repository update request
message RepositoryUpdateRequest {
	int64 AccountID = 1;
    string RepositoryID = 2;
    string Name = 3;
}

// Repository delete request
message RepositoryDeleteRequest {
	int64 AccountID = 1;
	string RepositoryID = 2;
}

// Repository response
message RepositoryResponse {
    string RepositoryID = 1;
    int64 AccountID = 2;
    google.protobuf.Timestamp CreatedAt = 3;
    google.protobuf.Timestamp UpdatedAt = 4;
    string Name = 5;
}

// RepositoryList is a list of Repositories
message RepositoryListResponse {
	repeated RepositoryResponse Repositories = 1;
}

// Schemas

message SchemaAction {
  string Name = 1;
  optional string Description = 2;
}

message SchemaResource {
  string Name = 1;
  optional string Description = 2;
  repeated SchemaAction Actions = 3;
}

message SchemaDomain {
  string Name = 1;
  optional string Description = 2;
  repeated SchemaResource Resources = 3;
}

// Schema get request
message SchemaGetRequest {
	int64 AccountID = 1;
	optional string SchemaID = 2;
}

// Schema create request
message SchemaCreateRequest {
	int64 AccountID = 1;
	repeated SchemaDomain Domains = 2;
}

// Schema update request
message SchemaUpdateRequest {
	int64 AccountID = 1;
	optional string SchemaID = 2;
	optional string RepositoryID = 3;
	repeated SchemaDomain Domains = 4;
}

// Schema delete request
message SchemaDeleteRequest {
	int64 AccountID = 1;
	string SchemaID = 2;
}

// Schema response
message SchemaResponse {
	string SchemaID = 1;
	int64 AccountID = 2;
	string RepositoryID = 3;
	string RepositoryName = 4;
    google.protobuf.Timestamp CreatedAt = 5;
    google.protobuf.Timestamp UpdatedAt = 6;
    repeated SchemaDomain Domains = 7;
}

// SchemaList is a list of Schemas
message SchemaListResponse {
	repeated SchemaResponse Schemas = 1;
}

// V1PAPService is the service for the Policy Administration Point
service V1PAPService {
	// Create an repository
	rpc CreateRepository(RepositoryCreateRequest) returns (RepositoryResponse) {}
	// Update an repository
	rpc UpdateRepository(RepositoryUpdateRequest) returns (RepositoryResponse) {}
	// Delete an repository
	rpc DeleteRepository(RepositoryDeleteRequest) returns (RepositoryResponse) {}
	// Get all repositories
	rpc GetAllRepositories(RepositoryGetRequest) returns (RepositoryListResponse) {}

	// Update a schema
	rpc UpdateSchema(SchemaUpdateRequest) returns (SchemaResponse) {}
	// Get all Schemas
	rpc GetAllSchemas(SchemaGetRequest) returns (SchemaListResponse) {}
}
